import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { useSession, signOut, signIn } from "next-auth/react";
import { Page } from "@/components/layouts/Page";
import { PageContent } from "@/components/layouts/PageContent";
import { Container } from "@/components/layouts/Container";
import { useEffect, useState } from "react";
import Link from "next/link";
import useSWR from "swr";
import { JalaLogo, LoadingLogo } from "@/components/icons/JalaLogo";
import { fetcher } from "@/utils/fetcher";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [value, setValue] = useState("");
  // const [links, setLinks] = useState({});

  const { data: session, status } = useSession();

  useEffect(() => {
    if (!session && status == "unauthenticated") {
      signIn();
    }
  }, [session]);

  console.log(session);

  const handleInputChange = (event: any) => {
    console.log(event);
    setValue(event.target.value);
    // const { name, value } = event.target;
    // setProfileData((prevSettings) => ({
    //   ...prevSettings,
    //   [name]: value,
    // }));
  };

  // const {
  //   data: link,
  //   error: linkDataError,
  //   isLoading: linkDataLoading,
  // } = useSWR(
  //   session ? `${process.env.NEXT_PUBLIC_AIRTABLE_URI}/links?` : null,
  //   (url) =>
  //     fetcher(url, {
  //       headers: {
  //         Authorization: `Bearer ${process.env.NEXT_PUBLIC_AIRTABLE_TOKEN}`,
  //         "Content-Type": "application/json",
  //       },
  //     })
  // );

  const {
    data: user,
    error: userDataError,
    isLoading: userDataLoading,
  } = useSWR(
    session
      ? `${process.env.NEXT_PUBLIC_AIRTABLE_URI}/users?filterByFormula=email='${session?.user?.email}'`
      : null,
    (url) =>
      fetcher(url, {
        headers: {
          Authorization: `Bearer ${process.env.NEXT_PUBLIC_AIRTABLE_TOKEN}`,
          "Content-Type": "application/json",
        },
      })
  );

  const links = user?.records[0]?.fields?.links;
  const owner = user?.records[0]?.id;

  const handleSubmit = async (e: any) => {
    e.preventDefault();

    await fetch("/api/shorten", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ url: value, owner: owner }),
    });
  };

  // console.log(user);

  // console.log(link);

  // const getLinks = async () => {
  //   // const response = await fetch("/api/links", {
  //   //   method: "GET",
  //   // }).then((res) => {
  //   //   // console.log(res);
  //   //   return res.json();
  //   // });
  //   // return response;
  //   const url = await fetch(
  //     `${process.env.NEXT_PUBLIC_AIRTABLE_URI}/links?filterByFormula=shortname='abcde'`,
  //     {
  //       method: "GET",
  //       headers: {
  //         Authorization: `Bearer ${process.env.NEXT_PUBLIC_AIRTABLE_TOKEN}`,
  //       },
  //     }
  //   ).then((res) => {
  //     return res.json();
  //   });
  //   return url;
  // };

  // const refreshLinks = async () => {
  //   console.log("refresh");
  //   const linksObjects = await getLinks();
  //   // console.log(linksObjects);
  //   setLinks(linksObjects);
  // };

  useEffect(() => {
    // async () => {
    //   await refreshLinks();
    // };
    // refreshLinks();
  }, []);

  console.log(links);
  return (
    <>
      <Head>
        <title>Udan.gg Url Shortener</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Page>
        <PageContent>
          <Container>
            <div className="flex flex-col gap-4 text-slate-700 space-y-2 relative py-16">
              <div className="px-4">
                <form
                  className="form flex flex-row gap-2 relative"
                  onSubmit={handleSubmit}
                >
                  <input
                    value={value}
                    placeholder="Shorten your url here!"
                    className="placeholder:text-slate-400  py-2 mt-1 block w-full rounded-md text-slate-600 border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
                    onChange={handleInputChange}
                  />
                  <button
                    className="absolute right-1.5 bottom-1.5 px-4 py-1 rounded-md border text-sm font-semibold border-slate-200"
                    type="submit"
                  >
                    Shorten! üç§
                  </button>
                </form>
              </div>

              {/* <div className="">
                {links ? (
                  Object.keys(links).map((link: any, i) => {
                    const long = links[link];
                    return (
                      <div className="flex flex-row" key={i}>
                        <div>
                          <a
                            href={`http://localhost:3000/${link}`}
                          >{`http://localhost:3000/${link}`}</a>
                        </div>
                        <div></div>
                      </div>
                    );
                  })
                ) : (
                  <></>
                )}
              </div> */}
              <div className="flex flex-col gap-2 px-4">
                {links ? (
                  links.map((link: any, i: number) => (
                    <div key={link}>{link}</div>
                  ))
                ) : (
                  <></>
                )}
              </div>
            </div>
          </Container>
        </PageContent>
      </Page>
    </>
  );
}
